/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aed3;

import java.awt.Dimension;
import java.util.Arrays;
import javax.swing.JPanel;

/**
 *
 * @author Everton
 */
public class SortPrinter extends javax.swing.JFrame {

    /**
     * Creates new form SortPrinter
     */
    public SortPrinter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sortGraph2 = new aed3.SortGraph();
        btnSort = new javax.swing.JButton();
        comboSort = new javax.swing.JComboBox<>();
        edtQuantidade = new javax.swing.JTextField();
        lblQUantidade = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        myPanel = new javax.swing.JPanel();
        sortGraph1 = new aed3.SortGraph();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTempo = new javax.swing.JLabel();
        lblArray = new javax.swing.JLabel();

        javax.swing.GroupLayout sortGraph2Layout = new javax.swing.GroupLayout(sortGraph2);
        sortGraph2.setLayout(sortGraph2Layout);
        sortGraph2Layout.setHorizontalGroup(
            sortGraph2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        sortGraph2Layout.setVerticalGroup(
            sortGraph2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnSort.setText("Ordenar");
        btnSort.setToolTipText("");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        comboSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Direct Insertion Sort", "Direct Selection Sort", "Bubble Sort", "Radix Sort", "Merge Sort", "Shell Sort", "Heap Sort", "Quick Sort" }));

        edtQuantidade.setText("1000");

        lblQUantidade.setText("Quantidade");

        jLabel1.setText("Atenção, vetor criado dinamicamene com base no valor informado em quantidade!");

        myPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        sortGraph1.setAutoscrolls(true);

        javax.swing.GroupLayout sortGraph1Layout = new javax.swing.GroupLayout(sortGraph1);
        sortGraph1.setLayout(sortGraph1Layout);
        sortGraph1Layout.setHorizontalGroup(
            sortGraph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        sortGraph1Layout.setVerticalGroup(
            sortGraph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 268, Short.MAX_VALUE)
        );

        jLabel3.setText("Tempo:");

        jLabel2.setText("Array:");

        lblArray.setMaximumSize(new java.awt.Dimension(100, 0));

        javax.swing.GroupLayout myPanelLayout = new javax.swing.GroupLayout(myPanel);
        myPanel.setLayout(myPanelLayout);
        myPanelLayout.setHorizontalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sortGraph1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(lblArray, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        myPanelLayout.setVerticalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(lblArray, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(lblTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sortGraph1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(myPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(lblQUantidade)
                                .addGap(4, 4, 4)
                                .addComponent(edtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSort, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblQUantidade))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(edtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSort))
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(myPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        int quantity = Integer.parseInt(edtQuantidade.getText());
        
        switch(comboSort.getSelectedIndex()){
            case 0:
                DirectInsertionSort diSort = new DirectInsertionSort(quantity);
                SortGraph.myArray = diSort.getArray();
                SortGraph.myArraySorted = diSort.getArraySorted();
                SortGraph.time = diSort.getTime();
                break;
            case 1:
                DirectSelectionSort dsSort = new DirectSelectionSort(quantity);
                SortGraph.myArray = dsSort.getArray();
                SortGraph.myArraySorted = dsSort.getArraySorted();
                SortGraph.time = dsSort.getTime();
                break;
            case 2:
                BubbleSort bSort = new BubbleSort(quantity);
                SortGraph.myArray = bSort.getArray();
                SortGraph.myArraySorted = bSort.getArraySorted();
                SortGraph.time = bSort.getTime();
                break;
            case 3:
                RadixSort radixSort = new RadixSort(quantity);
                SortGraph.myArray = radixSort.getArray();
                SortGraph.myArraySorted = radixSort.getArraySorted();
                SortGraph.time = radixSort.getTime();
                break;
            case 4:
                MergeSort mSort = new MergeSort(quantity);
                SortGraph.myArray = mSort.getArray();
                SortGraph.myArraySorted = mSort.getArraySorted();
                SortGraph.time = mSort.getTime();
                break;
            case 5:
                ShellSort sSort = new ShellSort(quantity);
                SortGraph.myArray = sSort.getArray();
                SortGraph.myArraySorted = sSort.getArraySorted();
                SortGraph.time = sSort.getTime();
                break;
            case 6:
                HeapSort hSort = new HeapSort(quantity);
                SortGraph.myArray = hSort.getArray();
                SortGraph.myArraySorted = hSort.getArraySorted();
                SortGraph.time = hSort.getTime();
                break;
            case 7:
                QuickSort qSort = new QuickSort(quantity);
                SortGraph.myArray = qSort.getArray();
                SortGraph.myArraySorted = qSort.getArraySorted();
                SortGraph.time = qSort.getTime();
                break;
        }
        lblArray.setText(Arrays.toString(SortGraph.myArraySorted));
        lblTempo.setText(Long.toString(SortGraph.time)+" ms");
        repaint();

    }//GEN-LAST:event_btnSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortPrinter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortPrinter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortPrinter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortPrinter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortPrinter().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSort;
    private javax.swing.JComboBox<String> comboSort;
    private javax.swing.JTextField edtQuantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblArray;
    private javax.swing.JLabel lblQUantidade;
    private javax.swing.JLabel lblTempo;
    private javax.swing.JPanel myPanel;
    private aed3.SortGraph sortGraph1;
    private aed3.SortGraph sortGraph2;
    // End of variables declaration//GEN-END:variables
}
